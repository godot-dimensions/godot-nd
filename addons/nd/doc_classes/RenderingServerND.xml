<?xml version="1.0" encoding="UTF-8" ?>
<class name="RenderingServerND" inherits="Object" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Manages ND cameras and ND rendering engines.
	</brief_description>
	<description>
		RenderingServerND is the glue that brings together objects in the scene and prepares them for rendering by a rendering engine. [CameraND] and [MeshInstanceND] nodes will register themselves with the rendering server. Each frame, the rendering server will call the rendering engine to render the scene. The details of how the scene is rendered are up to the rendering engine.
		In comparison to Godot's rendering architecture, this is the ND equivalent of [RenderingServer], except that [RenderingServer] handles both 2D canvas rendering and 3D scene rendering, while RenderingServerND only does one thing, ND scene rendering.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_current_camera" qualifiers="const">
			<return type="CameraND" />
			<param index="0" name="viewport" type="Viewport" />
			<description>
				Returns the current [CameraND] for the given [Viewport]. If the viewport has no CameraNDs, or no CameraND is set as current, this method will return [code]null[/code].
			</description>
		</method>
		<method name="get_rendering_engine_names" qualifiers="const">
			<return type="PackedStringArray" />
			<description>
				Returns a list of all [RenderingEngineND] names that have been registered with the rendering server using [method register_rendering_engine].
			</description>
		</method>
		<method name="register_rendering_engine">
			<return type="void" />
			<param index="0" name="engine" type="RenderingEngineND" />
			<description>
				Register a [RenderingEngineND] with the rendering server. If registered in the editor, the rendering engine will be available as an option in the inspector of [CameraND] nodes.
			</description>
		</method>
		<method name="unregister_rendering_engine">
			<return type="void" />
			<param index="0" name="name" type="String" />
			<description>
				Unregister a [RenderingEngineND] with the rendering server.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="pre_render">
			<param index="0" name="camera" type="CameraND" />
			<param index="1" name="viewport" type="Viewport" />
			<param index="2" name="rendering_engine" type="RenderingEngineND" />
			<description>
				Emitted before rendering a frame from the [CameraND] to the [Viewport] using the [RenderingEngineND].
			</description>
		</signal>
	</signals>
</class>
